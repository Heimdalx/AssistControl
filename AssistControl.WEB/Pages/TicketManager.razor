@page "/ticketManager"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

<h3>TicketManager</h3>


<div class="mb-2" style="display: flex; flex-wrap:wrap; align-items: center;">  
    <div class="mx-2">
     <input style="width: 400px;" type="number" class="form-control" id="titulo" placeholder="Buscar entrada" @bind-value="TicketId" />
    </div>
    <div>
        <button type="button" class="btn btn-outline-primary" @onclick="GetAsync">Buscar</button>
    </div>
</div>

@if (ticket is null)
{
    <p>Cargue un ticket</p>
}
else
{
    <TicketForm @ref="ticketForm" Ticket="ticket" OnValidSubmit="EditAsync" OnReturnAction="Return" />

}
@code {
    public Ticket? ticket;

    private TicketForm? ticketForm;

    [Parameter]
    [SupplyParameterFromQuery]
    public int TicketId { get; set; }


    private async Task GetAsync()
    {

        var responseHttp = await repository.Get<Ticket>($"/api/tickets/{TicketId}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                return;
            }
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        ticket = responseHttp.Response!;
        if (ticket.FueUsada)
        {
            ticket = null;
            navigationManager.NavigateTo("/tickets/error");
        }
    }

    private async Task EditAsync()
    {
        ticket!.FechaDeUso = DateTime.Now;
        var httpResponse = await repository.Put("api/tickets", ticket);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {

        ticketForm!.FormPostedSuccessfully = true;
        ticket = null;
    }
}
